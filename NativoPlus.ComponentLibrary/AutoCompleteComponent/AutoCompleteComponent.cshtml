@inherits AutoCompleteComponentClass
@using Microsoft.JSInterop
@using System.Net.Http
@using NativoPlus.ComponentLibrary.Modals
@using NativoPlus.ComponentLibrary.Services
@using Newtonsoft.Json

<style>

    .blazor-typeahead-container {
        cursor: default;
    }

        .blazor-typeahead-container .scrollable-menu {
            height: auto;
            max-height: 250px;
            overflow-x: hidden;
        }

        .blazor-typeahead-container .dropdown-header {
            text-align: center;
            background: #eee;
            font-weight: 600;
            margin: 1px;
            margin-top: -8px;
        }

        .blazor-typeahead-container .dropdown-menu, .blazor-typeahead-container input {
            border: solid 2px #111 !important;
            border-radius: 0;
        }

            .blazor-typeahead-container .dropdown-menu a:hover {
                background: #40e0d0;
            }
</style>

@functions{

    protected override async Task OnInitAsync()
    {
        _client.BaseAddress = new Uri(Root);
    }


    public async Task TryAutoComplete(UIFocusEventArgs ev)
    {
        //    if (string.IsNullOrWhiteSpace(Term))
        //    {
        //        SuggestionList.Clear();
        //        _isOpen = false;
        //        return;
        //    }

        //    if (Term.Length < CharLimit)
        //    {
        //        return;
        //    }
        //    SuggestionList.Clear();
        //    var request = new SuggestionRequest { Term = Term };


        //    var result = await _client.PostAsJsonAsync<SuggestionRequest>
        //(Url, request);


        //    var SuggestionContent = await result.Content.ReadAsStringAsync();

        //    SuggestionList = JsonConvert.DeserializeObject<List<SuggestionResponse>>(SuggestionContent);

            _isOpen = SuggestionList.Count > 0;

        this.StateHasChanged();
    }



    void TrySelect(string item)
    {
        _isOpen = false;
        Term = item;

        this.StateHasChanged();

        OnSelectionMade?.Invoke(item);
    }



}


<div class="blazor-typeahead-container">
    <div class="input-group">
        <input type="text" class="@Class" placeholder="@Placeholder" style="@Style" autofocus=""
               oninput="this.blur(); this.focus();"
               bind="@Term"
               onblur="@(ev => TryAutoComplete(ev))" />
        <input type="hidden" name="@Name" bind="@Term" />
        <div class="input-group-append">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="display: none;">
                <i class="fa fa-chevron-down"></i>
            </button>
            @if (true)
            {
                <div class="dropdown-menu dropdown-menu-right scrollable-menu @(_isOpen ? "show" : "")" style="width: 100%;">
                    <h6 class="dropdown-header">@SuggestionList.Count() item(s)</h6>
                    @foreach (var item in SuggestionList)
                    {
                        <a class="dropdown-item"
                           onclick="@(() => TrySelect(item.Suggestion))">
                            @item.Suggestion
                        </a>
                    }
                </div>
            }


        </div>
    </div>
</div>

<span class="select2-container select2-container--default select2-container--open" style="position: absolute; top: 262.267px; left: 412px;">
    <span class="select2-dropdown select2-dropdown--above" dir="ltr" style="width: 1396px;">
        <span class="select2-search select2-search--dropdown">
            <input class="select2-search__field" type="search" tabindex="0" autocomplete="off" autocorrect="off"
                   autocapitalize="none" spellcheck="false" role="textbox">
        </span>
        @*This is the result list, "select2-result" has a display attribute, block= show results, none= hide results *@
        <span class="select2-results">
            
            <ul class="select2-results__options" role="tree" id="select2-4bjb-results" aria-expanded="true" aria-hidden="false">

                @* Here we define the elements on the list  *@
                @* Category can be set has this   *@
                <li class="select2-results__option" role="group" aria-label="Alaskan/Hawaiian Time Zone"
                    data-select2-id="66">
                    <strong class="select2-results__group">Alaskan/Hawaiian Time Zone</strong>

                    @* You can add a list of element to that particular catergory *@
                    <ul class="select2-results__options select2-results__options--nested">

                        @* Here is an example of an element. adding "-highlighted" will highlighted that particular element, *category should not be highlighted *@
                        <li class="select2-results__option select2-results__option--highlighted" id="select2-4bjb-result-t7s2-AK"
                            role="treeitem" aria-selected="true" data-select2-id="select2-4bjb-result-t7s2-AK">
                            <span>
                                <img src="/user/pages/images/flags/ak.png" class="img-flag"> Alaska
                            </span>
                        </li>
                        <li class="select2-results__option" id="select2-4bjb-result-x316-HI" role="treeitem"
                            aria-selected="false" data-select2-id="select2-4bjb-result-x316-HI">
                            <span>
                                <img src="/user/pages/images/flags/hi.png"
                                     class="img-flag"> Hawaii
                            </span>
                        </li>
                    </ul>
                </li>
              
            </ul>
        </span>
    </span>
</span>